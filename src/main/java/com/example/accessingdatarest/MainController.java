package com.example.accessingdatarest;



import com.example.accessingdatarest.Repo.PersonRepository;
import com.example.accessingdatarest.Repo.UserRepository;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.test.annotation.Commit;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;

@Controller // This means that this class is a Controller
@RequestMapping(path="/edit") // This means URL's start with /demo (after Application path)
public class MainController {
    @Autowired // This means to get the bean called userRepository
    // Which is auto-generated by Spring, we will use it to handle the data
    private UserRepository userRepository;


    @Commit
    @PostMapping(path="/addUser") // Map ONLY POST Requests
    public @ResponseBody String addNewUser (@RequestParam String login
            , @RequestParam String password) {
        // @ResponseBody means the returned String is the response, not a view name
        // @RequestParam means it is a parameter from the GET or POST request

        User n = new User();
        n.setLogin(login);
        n.setPassword(password);
        userRepository.save(n);
        return "Saved";
    }
    @GetMapping(path="/allUsers")
    public @ResponseBody Iterable<User> getAllUsers() {
        // This returns a JSON or XML with the users
        return userRepository.findAll();
    }
    
    @Autowired
    private PersonRepository personRepository;
    @Commit
    @PostMapping(path="/addPeople") // Map ONLY POST Requests
    public @ResponseBody String addNewPerson (@RequestParam String firstName
            , @RequestParam String lastName, @RequestParam String dob) {
        // @ResponseBody means the returned String is the response, not a view name
        // @RequestParam means it is a parameter from the GET or POST request

        Person p = new Person();
        p.setFirstName(firstName);
        p.setLastName(lastName);
        p.setDob(dob);
        personRepository.save(p);
        return "Saved";
    }


    @GetMapping(path="/allPeople")
    public @ResponseBody Iterable<Person> getAllPeople() {
        // This returns a JSON or XML with the users
        //return personRepository.findAll();
        return personRepository.findAll();
    }
}